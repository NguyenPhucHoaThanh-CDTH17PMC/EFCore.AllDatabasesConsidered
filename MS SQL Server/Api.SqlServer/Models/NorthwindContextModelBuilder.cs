// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable enable

namespace Northwind.Modes
{
    public partial class NorthwindContextModel
    {
        partial void Initialize()
        {
            var alphabeticalListOfProduct = AlphabeticalListOfProductEntityType.Create(this);
            var category = CategoryEntityType.Create(this);
            var categorySalesFor1997 = CategorySalesFor1997EntityType.Create(this);
            var currentProductList = CurrentProductListEntityType.Create(this);
            var customer = CustomerEntityType.Create(this);
            var customerAndSuppliersByCity = CustomerAndSuppliersByCityEntityType.Create(this);
            var employee = EmployeeEntityType.Create(this);
            var invoice = InvoiceEntityType.Create(this);
            var order = OrderEntityType.Create(this);
            var orderDetail = OrderDetailEntityType.Create(this);
            var orderDetailsExtended = OrderDetailsExtendedEntityType.Create(this);
            var ordersQry = OrdersQryEntityType.Create(this);
            var orderSubtotal = OrderSubtotalEntityType.Create(this);
            var product = ProductEntityType.Create(this);
            var productsAboveAveragePrice = ProductsAboveAveragePriceEntityType.Create(this);
            var productSalesFor1997 = ProductSalesFor1997EntityType.Create(this);
            var productsByCategory = ProductsByCategoryEntityType.Create(this);
            var quarterlyOrder = QuarterlyOrderEntityType.Create(this);
            var salesByCategory = SalesByCategoryEntityType.Create(this);
            var salesTotalsByAmount = SalesTotalsByAmountEntityType.Create(this);
            var shipper = ShipperEntityType.Create(this);
            var summaryOfSalesByQuarter = SummaryOfSalesByQuarterEntityType.Create(this);
            var summaryOfSalesByYear = SummaryOfSalesByYearEntityType.Create(this);
            var supplier = SupplierEntityType.Create(this);

            EmployeeEntityType.CreateForeignKey1(employee, employee);
            OrderEntityType.CreateForeignKey1(order, customer);
            OrderEntityType.CreateForeignKey2(order, employee);
            OrderEntityType.CreateForeignKey3(order, shipper);
            OrderDetailEntityType.CreateForeignKey1(orderDetail, order);
            OrderDetailEntityType.CreateForeignKey2(orderDetail, product);
            ProductEntityType.CreateForeignKey1(product, category);
            ProductEntityType.CreateForeignKey2(product, supplier);

            AlphabeticalListOfProductEntityType.CreateAnnotations(alphabeticalListOfProduct);
            CategoryEntityType.CreateAnnotations(category);
            CategorySalesFor1997EntityType.CreateAnnotations(categorySalesFor1997);
            CurrentProductListEntityType.CreateAnnotations(currentProductList);
            CustomerEntityType.CreateAnnotations(customer);
            CustomerAndSuppliersByCityEntityType.CreateAnnotations(customerAndSuppliersByCity);
            EmployeeEntityType.CreateAnnotations(employee);
            InvoiceEntityType.CreateAnnotations(invoice);
            OrderEntityType.CreateAnnotations(order);
            OrderDetailEntityType.CreateAnnotations(orderDetail);
            OrderDetailsExtendedEntityType.CreateAnnotations(orderDetailsExtended);
            OrdersQryEntityType.CreateAnnotations(ordersQry);
            OrderSubtotalEntityType.CreateAnnotations(orderSubtotal);
            ProductEntityType.CreateAnnotations(product);
            ProductsAboveAveragePriceEntityType.CreateAnnotations(productsAboveAveragePrice);
            ProductSalesFor1997EntityType.CreateAnnotations(productSalesFor1997);
            ProductsByCategoryEntityType.CreateAnnotations(productsByCategory);
            QuarterlyOrderEntityType.CreateAnnotations(quarterlyOrder);
            SalesByCategoryEntityType.CreateAnnotations(salesByCategory);
            SalesTotalsByAmountEntityType.CreateAnnotations(salesTotalsByAmount);
            ShipperEntityType.CreateAnnotations(shipper);
            SummaryOfSalesByQuarterEntityType.CreateAnnotations(summaryOfSalesByQuarter);
            SummaryOfSalesByYearEntityType.CreateAnnotations(summaryOfSalesByYear);
            SupplierEntityType.CreateAnnotations(supplier);

            AddAnnotation("ProductVersion", "6.0.4");
            AddAnnotation("Relational:MaxIdentifierLength", 128);
            AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
        }
    }
}
